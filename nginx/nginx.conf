######
# This is a image_filter configuration on default nginx conf.
# see http://nginx.org/en/docs/http/ngx_http_image_filter_module.html
# and http://nginx.org/en/docs/http/ngx_http_proxy_module.html
# can get more infomations.
#
# use this configuration, you can visit http://example.com/resize_1920x1080/0.jpg
#
######

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
    error_log  logs/access.err;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #


    #proxy_buffers 8 6400k;
    #proxy_buffer_size 12800k;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location /resize {
            set $width 150;
            set $height 100;
            set $dimens "";

            if ($uri ~* "^/resize_(\d+)x(\d+)/(.*\.(jpg|gif|png))$") {
                set $width $1;
                set $height $2;
                set $image_path $3;
                set $dimens "_$1x$2";
            }

            if ($uri ~* "^/resize/(.*)") {
                set $image_path $1;
            }

            set $image_uri image_resize/$image_path?width=$width&height=$height;

            if (!-f $request_filename) {
                proxy_pass http://127.0.0.1/$image_uri;
                break;
            }

            proxy_store on;
            proxy_store_access user:rw group:rw all:r;
            proxy_temp_path /tmp/img;
            proxy_set_header Host $host;

            alias /data/image/;
        }

        location /image_resize {
            alias img;
            image_filter resize $arg_width $arg_height;
            image_filter_jpeg_quality 75;
            image_filter_buffer 10M;
            allow all;
        }


        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
